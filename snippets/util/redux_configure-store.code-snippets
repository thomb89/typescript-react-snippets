{
  "@reduxjs/toolkit configureStore": {
    "prefix": "configurestore-redux",
    "body": [
      "import { configureStore, DeepPartial } from \"@reduxjs/toolkit\";",
      "import { useDispatch } from \"react-redux\";",
      "import { apiReducer } from \"./api\";",
      "import { toastReducer } from \"./toast\";",
      "",
      "export const getStore = <T extends {}>(preloadedState?: DeepPartial<T>) =>",
      "  configureStore({",
      "    reducer: {",
      "      toast: toastReducer,",
      "      api: apiReducer,",
      "    },",
      "    preloadedState,",
      "    devTools: true,",
      "    // don't forget to add middleware from api",
      "    middleware: (getDefaultMiddleWare) => getDefaultMiddleWare().concat([]),",
      "  });",
      "",
      "export const useAppDispatch = () => useDispatch<ReturnType<typeof getStore>[\"dispatch\"]>();",
      "export type RootState = ReturnType<typeof getStore>[\"getState\"];",
      ""
    ],
    "description": "@reduxjs/toolkit configureStore"
  }
}
