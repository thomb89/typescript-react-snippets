{
  "@testing-library/react with custom render": {
    "prefix": "test-utils.ts",
    "description": "@testing-library/react with custom render",
    "body": [
      "import { MockedProvider, MockedResponse } from '@apollo/client/testing';",
      "import { render, RenderResult } from '@testing-library/react';",
      "",
      "export type renderProps = {",
      "  apolloMocks?: MockedResponse[];",
      "  component: JSX.Element;",
      "};",
      "",
      "export type result = {",
      "  component: RenderResult;",
      "};",
      "",
      "const customRender = ({ component, apolloMocks }: renderProps): result => {",
      "  const wrapper: React.FC<{}> = ({ children }) => {",
      "    return (",
      "      <MockedProvider",
      "        mocks={apolloMocks}",
      "        addTypename={true}",
      "        defaultOptions={{ watchQuery: { fetchPolicy: 'no-cache' }, query: { fetchPolicy: 'no-cache' } }}>",
      "        {children}",
      "      </MockedProvider>",
      "    );",
      "  };",
      "",
      "  const renderedComponent = render(component, { wrapper });",
      "",
      "  return {",
      "    component: renderedComponent,",
      "  };",
      "};",
      "",
      "// re-export everything",
      "export * from '@testing-library/react';",
      "",
      "// override render method",
      "export { customRender as render };",
      ""
    ]
  }
}
